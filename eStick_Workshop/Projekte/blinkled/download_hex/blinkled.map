Archive member included because of file (symbol)

c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
                              c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o (exit)
c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
                              blinkled.o (__do_copy_data)
c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
                              blinkled.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
LOAD blinkled.o
LOAD c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a
LOAD c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35\libc.a
LOAD c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0xfc
 *(.vectors)
 .vectors       0x00000000       0x74 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000074                . = ALIGN (0x2)
                0x00000074                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000074        0x0 linker stubs
 *(.trampolines*)
                0x00000074                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000074                __ctors_start = .
 *(.ctors)
                0x00000074                __ctors_end = .
                0x00000074                __dtors_start = .
 *(.dtors)
                0x00000074                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000074        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
                0x00000074                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000074        0xc c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000080       0x16 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
                0x00000080                __do_copy_data
 .init4         0x00000096       0x10 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
                0x00000096                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000a6        0x8 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
 *(.init9)
 *(.text)
 .text          0x000000ae        0x4 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
                0x000000ae                __vector_22
                0x000000ae                __vector_28
                0x000000ae                __vector_1
                0x000000ae                __vector_24
                0x000000ae                __vector_12
                0x000000ae                __bad_interrupt
                0x000000ae                __vector_6
                0x000000ae                __vector_3
                0x000000ae                __vector_23
                0x000000ae                __vector_25
                0x000000ae                __vector_11
                0x000000ae                __vector_13
                0x000000ae                __vector_17
                0x000000ae                __vector_19
                0x000000ae                __vector_7
                0x000000ae                __vector_27
                0x000000ae                __vector_5
                0x000000ae                __vector_4
                0x000000ae                __vector_9
                0x000000ae                __vector_2
                0x000000ae                __vector_21
                0x000000ae                __vector_15
                0x000000ae                __vector_8
                0x000000ae                __vector_26
                0x000000ae                __vector_14
                0x000000ae                __vector_10
                0x000000ae                __vector_16
                0x000000ae                __vector_18
                0x000000ae                __vector_20
 .text          0x000000b2       0x46 blinkled.o
                0x000000b2                main
 .text          0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
 .text          0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
 .text          0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
                0x000000f8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
 .text.libgcc   0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
 .text.libgcc   0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
                0x000000f8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000f8        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
                0x000000f8                exit
                0x000000f8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000f8        0x4 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
 *(.fini0)
                0x000000fc                _etext = .

.data           0x00800100        0x0 load address 0x000000fc
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
 .data          0x00800100        0x0 blinkled.o
 .data          0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0 load address 0x000000fc
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/../../../../avr/lib/avr35/crtusb162.o
 .bss           0x00800100        0x0 blinkled.o
 .bss           0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_exit.o)
 .bss           0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_copy_data.o)
 .bss           0x00800100        0x0 c:/embedded/winavr-20080610/bin/../lib/gcc/avr/4.3.0/avr35\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x000000fc                __data_load_start = LOADADDR (.data)
                0x000000fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 blinkled.o

.debug_pubnames
                0x00000000       0x1b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b blinkled.o

.debug_info     0x00000000      0x15b
 *(.debug_info)
 .debug_info    0x00000000      0x15b blinkled.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000       0xcb
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xcb blinkled.o

.debug_line     0x00000000      0x152
 *(.debug_line)
 .debug_line    0x00000000      0x152 blinkled.o

.debug_frame    0x00000000       0x20
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 blinkled.o

.debug_str      0x00000000       0xd7
 *(.debug_str)
 .debug_str     0x00000000       0xd7 blinkled.o
                                0x10b (size before relaxing)

.debug_loc      0x00000000       0x80
 *(.debug_loc)
 .debug_loc     0x00000000       0x80 blinkled.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(blinkled.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x60
 .debug_ranges  0x00000000       0x60 blinkled.o
